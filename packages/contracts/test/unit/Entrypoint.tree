Entrypoint::constructor
└── When deployed
    └── It disables initializers

Entrypoint::initialize
├── Given valid owner and admin
│   ├── It grants owner role
│   └── It grants admin role
└── When already initialized
    └── It reverts with AlreadyInitialized

Entrypoint::updateRoot
├── Given caller has admin role
│   ├── Given valid root and ipfs hash
│   │   ├── It adds new association set
│   │   ├── It sets block timestamp
│   │   ├── It returns correct index
│   │   └── It emits RootUpdated event
│   ├── When root is zero
│   │   └── It reverts with EmptyRoot
│   └── When ipfs hash is zero
│       └── It reverts with EmptyIPFSHash
└── When caller lacks admin role
    └── It reverts with AccessControlError

Entrypoint::deposit ETH
├── Given pool exists
│   ├── Given value meets minimum
│   │   ├── It deducts correct fees
│   │   ├── It forwards ETH to pool
│   │   ├── It maintains contract balance
│   │   └── It emits Deposited event
│   └── When value below minimum
│       └── It reverts with MinimumDepositAmount
└── When pool not found
    └── It reverts with PoolNotFound

Entrypoint::deposit ERC20
├── Given pool exists
│   ├── Given value meets minimum
│   │   ├── It transfers tokens from sender
│   │   ├── It deducts correct fees
│   │   ├── It deposits to pool
│   │   └── It emits Deposited event
│   └── When value below minimum
│       └── It reverts with MinimumDepositAmount
└── When pool not found
    └── It reverts with PoolNotFound

Entrypoint::relay
├── Given pool exists
│   ├── Given valid processooor
│   │   ├── Given valid withdrawal and proof
│   │   │   ├── It processes withdrawal
│   │   │   ├── It transfers correct amounts
│   │   │   ├── It maintains pool balance
│   │   │   └── It emits WithdrawalRelayed event
│   │   └── When withdrawal fails
│   │       └── It reverts
│   └── When invalid processooor
│       └── It reverts with InvalidProcessooor
└── When pool not found
    └── It reverts with PoolNotFound

Entrypoint::registerPool
├── Given caller has admin role
│   ├── Given pool not registered
│   │   ├── It registers pool
│   │   ├── It sets asset config
│   │   ├── It approves pool for asset
│   │   └── It emits PoolRegistered event
│   ├── When asset pool exists
│   │   └── It reverts with AssetPoolAlreadyRegistered
│   └── When scope pool exists
│       └── It reverts with ScopePoolAlreadyRegistered
└── When caller lacks admin role
    └── It reverts with AccessControlError

Entrypoint::removePool
├── Given caller has admin role
│   ├── Given pool exists
│   │   ├── It sets allowance to zero
│   │   ├── It removes scope mapping
│   │   ├── It removes asset config
│   │   └── It emits PoolRemoved event
│   └── When pool not found
│       └── It reverts with PoolNotFound
└── When caller lacks admin role
    └── It reverts with AccessControlError

Entrypoint::windDownPool
├── Given caller has owner role
│   ├── Given pool exists
│   │   ├── It calls pool windDown
│   │   └── It emits PoolWindDown event
│   └── When pool not found
│       └── It reverts with PoolNotFound
└── When caller lacks owner role
    └── It reverts with AccessControlError

Entrypoint::withdrawFees
├── Given caller has admin role
│   ├── Given asset is ETH
│   │   ├── When balance exists
│   │   │   ├── It transfers full balance
│   │   │   └── It emits FeesWithdrawn event
│   │   └── When transfer fails
│   │       └── It reverts with ETHTransferFailed
│   └── Given asset is ERC20
│       ├── When balance exists
│       │   ├── It transfers full balance
│       │   └── It emits FeesWithdrawn event
│       └── When transfer fails
│           └── It reverts
└── When caller lacks admin role
    └── It reverts with AccessControlError

Entrypoint::latestRoot
├── Given association sets exist
│   └── It returns most recent root
└── Given no association sets
    └── It returns zero

Entrypoint::rootByIndex
├── Given valid index
│   └── It returns correct root
└── When index invalid
    └── It reverts

Entrypoint::_deductFee
├── Given nonzero amount and fee
│   ├── It calculates fee correctly
│   └── It returns amount minus fee
└── Given zero amount
    └── It returns zero
